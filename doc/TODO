TODO

Revamp ADC with new hardware/software division!
test adc_inactive return code?

Read through the manual and make chip files for the ATtiny861. Gotta get this on the hardware again!


Think about how to handle interrupts. Should I take the timer's interrupt and put it inside the TimeService?



    ~~~ Documentation ~~~
Add documentation to header files. Hey, I should at least try.

Revise SDD.

Put some nice colors in the makefile to signal the start of a build.



    ~~~ Hardware ~~~
Revise/remove various hardware tests. They should either work and be useful or be gone.

? Set up the AVCC and VCC with a 100 nF cap and a 10uH:
  The AVCC pin on the ATtiny26(L) should be connected to the digital V CC supply voltage via an LC network as shown in Figure 57.

Start to rig up my actual project.



    ~~~ Software ~~~
Create tests for BitManip.h
Round out available functions.

Document and streamline testing for NULL pointers for a generic multi-instance module.

Think through how to do Destroy again. Then edit all occurrences.

Recreate a problem with double free and then fix it.

Learn how to detect memory leaks, i.e. not freeing data.

Think about SBIT, CBIT, and 0

Think about setting a bit number and setting a single bit in a bitmask. Which should we do?

Think about setting and checking bitmasks.

Document how signed 8-bit variables differ in behavior compared to unsigned 8-bit variables.



    ~~~ Makefile ~~~
Edit makefile to allow user to switch between hardware platforms. Will require directory reorganization!

Create a compile-only makefile target. This will give me any easy-to-use visual representation of code dependencies.

Figure out a way to rebuild tests without each test recompiling the production code library.
