Todo_TimeService

Need to find a way to give some tasks priority, or to execute from within the ISR (!).
Need to learn how to do timing testing so that we can make sure that the screen update takes < 1 or 2 ms.



Create separate test file for private functions?
Rethink the organization of the tests. It's a bit messy right now.

Think about splitting counter and period enums for clarity.
Perhaps we should add devoted activate anddeactivate functions.

Test deactivate() with nonconsecutive alarms?

Consider redesigning TimeService so that the callbacks can take a void pointer as an argument.
We'd have to service alarms individually but it makes them much more powerful.

Remove callback parameter demo (don't need the null demo, I think; we'll test that when we test/create the actual callback function).
Clean up the tests.
Try out a struct, even though I know it should work.

Check execution time of TimerTick.
